Wstęp
-------


Sage to stosunkowo młody pakiet, pierwsza jego wersja pojawiła się w 2005 roku. Jest to pakiet w pełni otwarty nie tylko pod względem kodu, ale i metodologii rozwoju. Dzięki wykorzystaniu dostępnych technologii i innowacyjnemu podejściu głównego twórcy pakietu - dr. Williama Steina z University of Washington w Seattle - pakiet doścignął, a w wielu dziedzinach już przegonił konkurencyjne rozwiązania komercyjne. Dziś jest rozwijany przez ponad 200 osób z całego świata, przy czym większość z nich czynnie pracuje w instytucjach naukowych - dzięki temu dostosowany jest on do prowadzenia badań i tworzenia materiałów dydaktycznych. Potwierdza to ponad 150 artykułów, rozpraw i książek cytujących pakiet oraz liczne kursy realizowane z wykorzystaniem tego pakietu, głównie z grupy nauk ścisłych, zarazem z matematyki, informatyki, jak i fizyki.

Ważną cechą pakietu Sage jest to, że zamiast budować wszystko od nowa, inteligentnie wykorzystuje on istniejące rozwiązania. Najważniejszym elementem, który przyczynił się do sukcesu pakietu, okazał się być język. W przeciwieństwie do pakietów takich jak Mathematica, Maple czy Matlab, w pakiecie Sage nie utworzono nowego języka, lecz wykorzystano istniejący i sprawdzony język programowania - Python. Język ma wiele pożądanych cech:

- jest prosty - w Pythonie programy zwykle są krótsze niż w innych językach, są też bardziej intuicyjne i przejrzyste. Czytelność kodu jest uznawana za kluczową, ponieważ rzadko kiedy programy raz napisane już się nie zmieniają. Bez trudu można się nauczyć całego języka Python, co jest niemożliwe w przypadku na przykład C++, którego specyfikacja ma zbyt wiele stron, aby zapamiętać wszystkie wyjątki od reguł i zawiłości,
- łatwo go rozbudować i zoptymalizować - w Pythonie nie tylko możemy rozbudować język dodając nową bibliotekę napisaną w nim samym, możemy je również pisać w innych językach. Dzięki temu możemy zoptymalizować w C lub assemblerze tylko te fragmenty kodu, które tego wymagają zachowując łatwość modyfikacji większości programu. Co więcej, jeśli stoimy przed zadaniem przygotowania aplikacji zastępującej wcześniej napisaną aplikację w C lub Fortranie, możemy wykorzystać moduły napisane w tych językach i stopniowo je przenosić do języka Python,
- interaktywność - Python jest językiem interpretowanym, znaczy to, że mamy dostępną konsolę podobną do tej znanej z pakietów takich jak Matlab. Interaktywność nie ogranicza się jednak do samej konsoli, większość obiektów występujących w języku pozwala na wgląd w ich konstrukcję, na sprawdzenie dokumentacji, dostępnych metod oraz funkcji, dzięki czemu jesteśmy w stanie przygotować programy działające dla zróżnicowanych obiektów,
- uniwersalność - Python jest przedstawicielem języków skryptowych, jednocześnie łączących w sobie wiele paradygmatów programowania - programowanie proceduralne, obiektowe i funkcyjne łączą się tu w jedną spójną całość. Powstają w nim zarazem małe, proste jednozadaniowe aplikacje lub rozszerzenia innych programów, oraz skomplikowane i rozbudowane środowiska graficzne lub naukowe. W tych ostatnich, wyposażony w odpowiednie biblioteki (takie jak te wchodzące w skład pakietu Sage), do większości zastosowań może zastąpić płatne pakiety.

Dzięki tym cechom język Python (według TIOBE) jest jednym z 10 najczęściej używanych języków programowania. Dzięki integracji z platformami do eksperymentowania takimi jak Arduino, jest też bardzo często używany w robotyce i automatyce - bez trudu można sterować z jego poziomu robotami jeżdżącymi, kroczącymi, latającymi czy nawet oprogramować protezę dłoni.

Wróćmy jednak do pakietu Sage. Podobnie jak Matematica lub Maple jest to pakiet do obliczeń symbolicznych, podobnie też jak w tych pakietach mamy do dyspozycji tak zwany notatnik (worksheet, notebook). Dzieli się on na komórki wejścia, w których wpisujemy komendy do wykonania, komórki wyjścia, którymi pakiet odpowiada, oraz komórki tekstowe (obsługujące TEXa oraz HTML, wszystko z prostym edytorem!) pozwalające uzupełnić notatnik o materiał dla czytelnika.

